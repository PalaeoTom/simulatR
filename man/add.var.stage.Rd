% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add.var.stage.R
\name{add.var.stage}
\alias{add.var.stage}
\title{Add variable to stage}
\usage{
add.var.stage(
  stage,
  var,
  var.name = "new.variable",
  name.out = "new",
  export = F
)
}
\arguments{
\item{stage}{A stage object or the name of the stage Rds file as a string.}

\item{var}{A function specifying how the variable should be calculated using existing stage elements OR a matrix of the same dimensions as the 'regions' stage element, specifying the variable value for each region.}

\item{var.name}{A string specifying name of new variable. Default = "new.variable".}

\item{name.out}{If export = TRUE, a string that specifies the name of the output file.}

\item{export}{If TRUE, updated stage with new variable is exported as an Rds file to working directory.}
}
\value{
A stage object with new variable added.
}
\description{
Add variable to stage
}
\examples{
# create a mock stage object
s <- list("regions" = matrix(seq(1,9,1), 3, 3), "dimensions" = matrix(400, 3, 3),
"distances" = matrix(20, 9, 9))

# check object and assign "stage" class if it conforms.
stage <- check.stage(s)

# Add pre-defined variable
new.variable <- matrix(10,3,3)
new.stage1 <- add.var.stage(stage = stage, var = new.variable, var.name = "new.var1")

# Define function to define new variable
new.variable.function <- function(stage){
var0 <- stage[["dimensions"]]
var1 <- sqrt(var0)
}

# Add new variable using function
new.stage2 <- add.var.stage(stage = stage, var = new.variable.function, var.name = "new.var2")

}
