% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen.seed.pops.R
\name{gen.seed.pops}
\alias{gen.seed.pops}
\title{Generate seed populations}
\usage{
gen.seed.pops(
  stage,
  pop.var.seeds,
  n,
  method = "random",
  export = F,
  name.out = "new"
)
}
\arguments{
\item{stage}{a stage object.}

\item{pop.var.seeds}{a pop.var.seeds object.}

\item{n}{a numeric value, specifying the number of populations to be seeded.}

\item{method}{Either "random" (the default) or a function with a stage object as an input. If "random", seed populations will be randomly assigned to regions specified in stage object.}

\item{export}{If TRUE, stage will be saved as an Rds file. Default is FALSE.}

\item{name.out}{A string to be included in the Rds output file name if export = TRUE. Default is "new".}
}
\value{
A populations object.
}
\description{
gen.seed.pops generates n seed populations with variables defined by pop.var.seeds and assigns them to regions within the provided stage using method.
If method = "random", regions are randomly selected with replacement for population.
}
\examples{
# create a mock stage object
s <- list("regions" = matrix(seq(1,9,1), 3, 3), "dimensions" = matrix(400, 3, 3), "distances" = matrix(20, 9, 9))

# check object and assign "stage" class if it conforms.
s <- check.stage(s)

# Generate a generic pop.var.seeds object
pvs <- set.pop.var.seeds(pop.gen.threshold = 0.1)

# Now generate seed populations
seed.pops <- gen.seed.pops(stage = s, pop.var.seeds = pvs, n = 10)

}
